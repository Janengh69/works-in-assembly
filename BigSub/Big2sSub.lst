Microsoft (R) Macro Assembler Version 14.16.27024.1	    12/20/18 08:46:36
Big2sSub.asm						     Page 1 - 1


				.686
				.model flat, C

 00000000			.code
 00000000			Big2sSub proc
 00000000  55				push ebp
 00000001  8B EC			mov ebp, esp
 00000003  BE 00000000			mov esi,0
 00000008  0F B7 75 14		    movzx esi, word ptr [ebp + 20]  ;length
 0000000C  BB 00000000			mov ebx, 0
 00000011  8B 55 08			mov edx, [ebp + 8]  ;m1
 00000014  8B 4D 0C			mov ecx, [ebp + 12] ;m2

 00000017  8B C6			mov eax, esi
 00000019  83 E0 03			and eax, 00000011b	
 0000001C  2B F0			sub esi, eax	

 0000001E  F8				clc
 0000001F  66| 9C			pushf									
 00000021			    start_32_loop:
 00000021  66| 9D		        popf	
 00000023  8B 04 1A				mov eax, dword ptr [edx + ebx]
 00000026  1B 04 19		        sbb eax, dword ptr [ecx + ebx]
 00000029  89 04 1A		        mov dword ptr [edx + ebx], eax
 0000002C  66| 9C				pushf								
 0000002E  83 C3 04				add ebx, 4
 00000031  3B DE		        cmp ebx, esi
 00000033  75 EC		        jnz start_32_loop

 00000035  66| 3B 75 14			cmp si, [ebp + 20]
 00000039  74 20			jz END_LABEL
 0000003B  B8 00000000			mov eax, 0
 00000040  BE 00000000			mov esi, 0
 00000045  66| 8B 75 14			mov si, word ptr [ebp + 20]

 00000049			    start_8_loop:
 00000049  66| 9D		        popf
 0000004B  8A 04 1A				mov al, byte ptr [edx + ebx]
 0000004E  1A 04 19		        sbb al, byte ptr [ecx + ebx]
 00000051  66| 9C		        pushf
 00000053  88 04 1A				mov byte ptr [edx + ebx], al
 00000056  43			        inc ebx
 00000057  3B DE		        cmp ebx, esi
 00000059  75 EE		        jnz start_8_loop

 0000005B				END_LABEL:
 0000005B  66| 9D			popf
 0000005D  B0 01			mov al, 1
 0000005F  72 02			jc @labelCarry
 00000061  B0 00			mov al, 0
 00000063				@labelCarry:
 00000063  8B 7D 10			mov edi, [ebp + 16]
 00000066  88 07			mov byte ptr [edi], al
 00000068  5D				pop ebp
 00000069  C3				ret
 0000006A			Big2sSub endp
				end
Microsoft (R) Macro Assembler Version 14.16.27024.1	    12/20/18 08:46:36
Big2sSub.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 00000000 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000006A Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

Big2sSub . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000006A Public C
  start_32_loop  . . . . . . . .	L Near	 00000021 _TEXT	
  start_8_loop . . . . . . . . .	L Near	 00000049 _TEXT	
  END_LABEL  . . . . . . . . . .	L Near	 0000005B _TEXT	
  @labelCarry  . . . . . . . . .	L Near	 00000063 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000001h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT

	   0 Warnings
	   0 Errors
